ea.runOutcome(
  index = 5;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-001.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)