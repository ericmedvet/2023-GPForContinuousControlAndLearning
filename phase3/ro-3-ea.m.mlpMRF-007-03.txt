ea.runOutcome(
  index = 7;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-001.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)