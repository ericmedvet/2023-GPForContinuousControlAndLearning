ea.runOutcome(
  index = 8;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-001.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)