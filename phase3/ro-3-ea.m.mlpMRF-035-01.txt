ea.runOutcome(
  index = 35;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)