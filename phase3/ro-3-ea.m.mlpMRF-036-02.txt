ea.runOutcome(
  index = 36;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 2);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)