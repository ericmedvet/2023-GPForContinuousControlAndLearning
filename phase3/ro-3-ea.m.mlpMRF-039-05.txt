ea.runOutcome(
  index = 39;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 5);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)