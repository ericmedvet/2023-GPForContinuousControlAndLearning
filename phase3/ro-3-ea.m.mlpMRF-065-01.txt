ea.runOutcome(
  index = 65;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-005.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAADWdwQAAADWc3IAEGphdmEubGFuZy5Eb3VibGWAs8JKKWv7BAIAAUQABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwP/uBv6i2hqVzcQB+AAI/zS4LisOpfHNxAH4AAj+mlunog3gKc3EAfgACP+IXD6XgOjhzcQB+AALAAmFlMmRckHNxAH4AAj/ki18PbLw8c3EAfgACP/bLQdPl+tBzcQB+AAI/8x8/lWrNwHNxAH4AAr/fBISPRSzFc3EAfgACv/GQ+QlxNBdzcQB+AAK/9wAD1iJ6pHNxAH4AAkAGXG+zvPSrc3EAfgACP/fx/j3HnZZzcQB+AAI/0jimYV5i73NxAH4AAj/th3AMmyfac3EAfgACv+RKtHxcBC5zcQB+AAK/tIu4bl4sSHNxAH4AAj/LSyovhrOLc3EAfgACP9Mq6XbAscZzcQB+AAK/+1s1RgXDGXNxAH4AAr/wVy1Tl116c3EAfgACP/1Ue0lPFlZzcQB+AAK/0m+uE9+lWHNxAH4AAj/TYdL4V3Slc3EAfgACwAdAF9y6TlxzcQB+AAJACxUMpDnKiXNxAH4AAr/ohObg+vYWc3EAfgACv9la2tX2c5RzcQB+AAI/0XlyhKTQiXNxAH4AAr/r8sUYhHyKc3EAfgACv70A8fwkx3pzcQB+AAK/2CwWH/q9c3NxAH4AAr9kA2QaFlQAc3EAfgACP+EYWpkBxyRzcQB+AAK/uxS4konfEHNxAH4AAj/XRxdI79JDc3EAfgACv/ZT0THvKQ5zcQB+AAI/8+QsBM/G6HNxAH4AAkAILxdAjyBmc3EAfgACP/nU/uAze/ZzcQB+AAJAC6f94CU4AXNxAH4AAj/Bnn8m8R0cc3EAfgACv8m4wEXXeBZzcQB+AAI/4Jgm4ZpoPHNxAH4AAr/2Fc7w7mJ9c3EAfgACP/JTjsjAamJzcQB+AAK/48+upPzrw3NxAH4AAsAFK0G/TCfbc3EAfgACv/Wtv1rcP2RzcQB+AAI/4bOCxfW2oHNxAH4AAr/y1DgHoGzec3EAfgACP8NIv4ybG5tzcQB+AAK/431Bm1RWuHNxAH4AAkAAy33+hNBQc3EAfgACP++D3z44arZzcQB+AAI/2IGq24dnPnNxAH4AAr//gmUQBwXCc3EAfgACwA0GTltdyXZzcQB+AAI/7/U8Acp/cXNxAH4AAj/EQl06MR1Cc3EAfgACP+Xjz+qcF0hzcQB+AAK/4TS3aRmkqnNxAH4AAr//j/cHQE2yc3EAfgACv/KV6IzJewhzcQB+AAI/0cl7irLbgHNxAH4AAj/4orN2ru0Kc3EAfgACwAR9Geb2XmBzcQB+AAK/6+x9u/XDBnNxAH4AAr/8RqBXLR8Sc3EAfgACv9RiTO9+P2dzcQB+AAI/8mbqSM6e1nNxAH4AAj/+F2nJeA02c3EAfgACP/MJV6DkvVVzcQB+AAI/1Dogu1XM1XNxAH4AAj//vl0GvBcJc3EAfgACwAKGQYhFASNzcQB+AAI/34J0CV7aSXNxAH4AAr/8zA552XD+c3EAfgACv9CFKK0rYbdzcQB+AAI/y7R4ylKsJHNxAH4AAr/pcAkqxo4Rc3EAfgACv/FJDVJNzDVzcQB+AAK/+DYQ7UMb1HNxAH4AAr/xfBu0bRxoc3EAfgACv/913w8lHHJzcQB+AAK/6eF7IU+txXNxAH4AAkAC4yIjvDEYc3EAfgACQANzixuw2LRzcQB+AAK/9RqKA4vPUnNxAH4AAr/w89juou2Bc3EAfgACQADUYcjoKGRzcQB+AAJACeB+bhQ6q3NxAH4AAkABrfD+dw7Oc3EAfgACP/fyW2810AlzcQB+AAI/+VnobH8umHNxAH4AAj/2miA0fRIuc3EAfgACP7b4E3typ5hzcQB+AALAARYqCBIMFnNxAH4AAr/ervI1mjSxc3EAfgACQANmwL2ZO8ZzcQB+AAI/6kUEMLHgyHNxAH4AAr/tNG3C/Sj6c3EAfgACP9t/l2diRn5zcQB+AAI/yc1RLNrGoXNxAH4AAr//jUNV/CYpc3EAfgACv/swMS2UIgpzcQB+AAK/0/6Q3jQmSnNxAH4AAr/wYDb5W5ffc3EAfgACv9p1qZLPKf1zcQB+AAI/9yGTCAUeAXNxAH4AAj/RgyIZWB73c3EAfgACQALRaMaVGvxzcQB+AALAAZ+GL2AkhHNxAH4AAr/vxZjvr6zCc3EAfgACP+6TGze2kllzcQB+AAI/8GaKITkBkHNxAH4AAkACnHJaEqZcc3EAfgACv8noj1AoN2pzcQB+AAI/9pBP0v4SwHNxAH4AAsAKxMDHnXNVc3EAfgACP7Di7CFV7+xzcQB+AAJAA0ZvkqkjLHNxAH4AAkAQe5Ua9shSc3EAfgACP9WNtaetTPVzcQB+AAJAA46KdKLaz3NxAH4AAj/k6KRiPj45c3EAfgACP+T5oD8CYxZzcQB+AAK/+XWP6dKBOnNxAH4AAr/ldKh8Llnxc3EAfgACv9GdGqTidmhzcQB+AAI/7ieIdQxH6HNxAH4AAsAIUnpZTpeUc3EAfgACP+lReOVFgmxzcQB+AALABdXoJ3bDZ3NxAH4AAj/iSe4dFObhc3EAfgACP/+gK6ovJPZzcQB+AAK/+kZ3cSK7iHNxAH4AAr+wo+KiAzuQc3EAfgACwBAe0b7QNeNzcQB+AAI/+JfUnM6YS3NxAH4AAj/0qWz44dC1c3EAfgACv7t98YSz2ixzcQB+AAI/8XOG4XPP+3NxAH4AAr/nUTsPoSNrc3EAfgACv9dyKELIsIBzcQB+AAI/9GrPCNz8uXNxAH4AAr/9JdjjZjg3c3EAfgACv9t5ynMOMGxzcQB+AAK/2/jwItGRQnNxAH4AAr/ohcpjGJImc3EAfgACv8Q50G+Mu21zcQB+AAI/5puJywVLL3NxAH4AAj/QDuLsxtjAc3EAfgACP+lTwVwFIK5zcQB+AAK/6SZLYD8oWHNxAH4AAj/1rn/2w1Wzc3EAfgACP/4KlMNEqfpzcQB+AAI/9+mRrfsXMXNxAH4AAr/pjB/dwypPc3EAfgACv/er/YvePEhzcQB+AAI/4PFFiSU2PXNxAH4AAj/6MSRivcoic3EAfgACv9FWnG/OwAJzcQB+AAI/+QOFRCMk9HNxAH4AAr/YB7B1KjPQc3EAfgACv+7c0FWl53pzcQB+AAI/8bfxvmkVXHNxAH4AAr/avyVlJDyQc3EAfgACQANm0HP8WdpzcQB+AAI/0Oe6Pvij2HNxAH4AAr/Jd7Ci/1Twc3EAfgACv/Q0agxDzQFzcQB+AAK/7p/5Z7OTHHNxAH4AAj/c4r22sFq+c3EAfgACP+x+xR4l0CZzcQB+AAJAADhLMHnWznNxAH4AAj/kQcKxHoWMc3EAfgACv/wBS49CpelzcQB+AAI/4D2PX8JiK3NxAH4AAj/2Dv/rvL6cc3EAfgACv8dE53yeq6lzcQB+AAK/wgF2lCds2nNxAH4AAj//wg1e8xFEc3EAfgACv+3mHOhR8ZlzcQB+AALAAEanVpwAd3NxAH4AAr/BEPmzG9aJc3EAfgACv8CBBQWM+UZzcQB+AAI/567VtQAHonNxAH4AAj/zT9GZov8ac3EAfgACv/33qWgynlJzcQB+AAI/y89pypDaw3NxAH4AAr/jupTgMnDgc3EAfgACP+My3yhgxUJzcQB+AAK/5lD/KIAMmnNxAH4AAr/67tF3OFrqc3EAfgACwAPO1TBPMpFzcQB+AAK/hONNr4kKAHNxAH4AAj+TUC7WOvaoc3EAfgACv9wn5F9N68JzcQB+AAI//4EA6M1/uXNxAH4AAr/8xKJiZpYYc3EAfgACv/BKdRGMcrJzcQB+AAI/0MBGC+cW93NxAH4AAr/98ZWNV/Otc3EAfgACv9s3VGjcxbpzcQB+AAI/9GyrHI3HZXNxAH4AAr/YEJbaZbJzc3EAfgACv+Lu2N4swkRzcQB+AAI//ZKZ1LrPk3NxAH4AAr/lueec2vw2c3EAfgACP/xCK+DKSN1zcQB+AAI/8KhrTWxSVHNxAH4AAsACFAvPV41gc3EAfgACv8C9kMCVrIR4"
  ]
)