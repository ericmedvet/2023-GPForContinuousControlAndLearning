ea.runOutcome(
  index = 66;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-005.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 2);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)