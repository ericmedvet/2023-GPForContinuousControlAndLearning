ea.runOutcome(
  index = 83;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-006.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)