ea.runOutcome(
  index = 110;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-008.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)