ea.runOutcome(
  index = 112;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-008.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)