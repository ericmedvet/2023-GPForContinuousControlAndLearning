ea.runOutcome(
  index = 125;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-009.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)