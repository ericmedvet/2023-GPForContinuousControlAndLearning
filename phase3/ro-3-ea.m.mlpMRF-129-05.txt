ea.runOutcome(
  index = 129;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-009.txt";
        folds = [0];
        nFolds = 50;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 5);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x01;
            x02;
            x03;
            x04;
            x05;
            x06;
            x07;
            x08;
            x09;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15;
            x16
          ];
          yVars = [y1; y2; y3; y4]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)