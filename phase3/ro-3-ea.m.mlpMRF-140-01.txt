ea.runOutcome(
  index = 140;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-010.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)