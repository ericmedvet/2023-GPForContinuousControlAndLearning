ea.runOutcome(
  index = 157;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-3-001.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)