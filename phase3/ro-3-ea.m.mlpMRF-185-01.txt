ea.runOutcome(
  index = 185;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)