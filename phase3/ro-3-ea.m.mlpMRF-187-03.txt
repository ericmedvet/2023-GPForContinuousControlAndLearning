ea.runOutcome(
  index = 187;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)