ea.runOutcome(
  index = 188;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)