ea.runOutcome(
  index = 200;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-004.txt";
        folds = [0];
        nFolds = 50;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x01;
            x02;
            x03;
            x04;
            x05;
            x06;
            x07;
            x08;
            x09;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15;
            x16
          ];
          yVars = [y1; y2; y3; y4]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)