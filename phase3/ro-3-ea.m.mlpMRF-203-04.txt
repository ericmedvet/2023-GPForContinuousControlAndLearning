ea.runOutcome(
  index = 203;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-004.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)