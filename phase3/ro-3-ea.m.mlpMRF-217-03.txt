ea.runOutcome(
  index = 217;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-005.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAADWdwQAAADWc3IAEGphdmEubGFuZy5Eb3VibGWAs8JKKWv7BAIAAUQABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwP+gMmc2oHTJzcQB+AAI/6JG2+zhqmnNxAH4AAr/4anbx328/c3EAfgACP/G06/6/oTRzcQB+AAI/+MttWTAYrXNxAH4AAr/qKuMMV+LZc3EAfgACP/LhgTDAhphzcQB+AAI/5puhQnTHPHNxAH4AAj/3Cyi46Fsmc3EAfgACv/aBrPnLmONzcQB+AAI/1GnTilpdR3NxAH4AAj/peKBE507Qc3EAfgACP/fqd3z4IXFzcQB+AAI/9PuiQ+RcjHNxAH4AAr+Rta/yuVOAc3EAfgACP6UCeUnCxohzcQB+AAI/8LVe1HVZmHNxAH4AAr/7zYXTXVCKc3EAfgACv97Bj8luPiRzcQB+AAK/7apUhtcHHHNxAH4AAj/RJaICFmKec3EAfgACv8TK4opIdYFzcQB+AAI/3Z4Bf8gZXnNxAH4AAj/rGkGF+h4hc3EAfgACv9aNznuDBhhzcQB+AAK/7hQxE6suqnNxAH4AAj/F/mkhxXRcc3EAfgACP76hkUZdrsxzcQB+AAI/65o0aiDYnHNxAH4AAr/ns/Ahiq7Hc3EAfgACP9zfXRhmDHlzcQB+AAK/pjQL784JoHNxAH4AAj+GFb0YELj0c3EAfgACP/TF+thp/phzcQB+AAK/0qbadXzhBHNxAH4AAkACZ1OlvNDrc3EAfgACv/AWA3n7O1JzcQB+AAI//E0975rE13NxAH4AAr/tls0lmhudc3EAfgACP/aNI0tJlRZzcQB+AAK/1SA1udyYnnNxAH4AAr/luKpcK7Oxc3EAfgACv6ifBOqlaahzcQB+AAK/ukOY+9rAMnNxAH4AAsABu3IU1Mc0c3EAfgACv+1jFskP3iBzcQB+AAI/8JtyIfrnjXNxAH4AAr/WkXW/rdD2c3EAfgACP/giNhl+qIxzcQB+AAK/8FGKLRNz33NxAH4AAj/kPzbaD0vec3EAfgACv+XXhA3fTaJzcQB+AAK/9TXcNmL2LHNxAH4AAkAAcw7nKob7c3EAfgACv/mJS1S8GbNzcQB+AAJABk61QLgV+XNxAH4AAj/wjiDoobt/c3EAfgACwAsuWIgdmTxzcQB+AAI/mYlq65zEQHNxAH4AAr/nFnQMq6eEc3EAfgACP+ouY41QmRxzcQB+AAK/wxsdzO592nNxAH4AAr/zOTyx9I3Ic3EAfgACP/WZ47IKlfZzcQB+AAK//7jE6CVCvnNxAH4AAkAB3RDprGnWc3EAfgACP/MfvZYqgBlzcQB+AAK/+rgZ6xKwfHNxAH4AAj//bwBi5aB3c3EAfgACv/ss1y1maK1zcQB+AAK/51yjCkpRWHNxAH4AAkAAkLl3/CWrc3EAfgACv9lVx1k2U2tzcQB+AAI/0E2I1fo4RnNxAH4AAj/t7C3dIk0Ic3EAfgACv//dcFOfPctzcQB+AALACW+AowE0u3NxAH4AAkALQ399MUpkc3EAfgACP+XP20WN0dpzcQB+AAI/9KCaQgNuNnNxAH4AAj+/Iu59rkrGc3EAfgACP8hTQCQ+ybZzcQB+AAI/+eAXBZeeqHNxAH4AAkAAf8CuMdekc3EAfgACP9kdbz5vpUZzcQB+AAI/2iFnXi0BfnNxAH4AAj/ipEqSnYiJc3EAfgACP/AjN5QcuXRzcQB+AAI/9VV23xfGAnNxAH4AAj/dnTZKqt+5c3EAfgACv+MeCW/dHXlzcQB+AAK/T25M0gWsAHNxAH4AAr/GNwEOpLQcc3EAfgACv/9K0KffTfBzcQB+AALAEv+kGtTconNxAH4AAj/isRA1cAvMc3EAfgACP8iBz78B3wxzcQB+AAJAAfsbOhW3MHNxAH4AAr/jpMBeB0a1c3EAfgACwATUpTFEeWRzcQB+AAK/ywsoHzePCHNxAH4AAj/01+yclW9Zc3EAfgACQAAqZKcTbw9zcQB+AAI/s820H9o+KHNxAH4AAj/8M7+1Se1Ic3EAfgACP/hNT0jnhHhzcQB+AAK/+dxOpIf8eXNxAH4AAr/rusT4fnqmc3EAfgACP/20ylaDv8pzcQB+AAI/woaO7w9CkHNxAH4AAj/xeIa0PeMMc3EAfgACwACFcWiTgNBzcQB+AAK/4m5oLN0MgnNxAH4AAr+x4CaMdYk8c3EAfgACP932XzmnvvBzcQB+AAI/uCjqlTAPBXNxAH4AAr/7IDr/YR0yc3EAfgACwAKgOjPQAfxzcQB+AAI/xTtxQHafbHNxAH4AAj/gN4mV3fTHc3EAfgACwAqcoQSGJp5zcQB+AAI/wLc8IWEkS3NxAH4AAr/htdep1KQSc3EAfgACv/DCSIU+xhZzcQB+AAK/sSgAR/ZNjHNxAH4AAr/ldz/J0+pZc3EAfgACP6GXtn+mAnBzcQB+AAK/6k/mvvNSJnNxAH4AAr/441vQ7THVc3EAfgACwASupLI8UV9zcQB+AAK/6KuaF4NCd3NxAH4AAj/oZs/Sv201c3EAfgACv87CP0B4f4ZzcQB+AAI/vkWNr0ORBnNxAH4AAr/sb5UWOlvHc3EAfgACv+knTRSfbaZzcQB+AAI/mlTy+HL6QHNxAH4AAj/uY69C+T0wc3EAfgACQAmtAGi08uFzcQB+AAJADzGdfvrI5HNxAH4AAj/8gNIHUJIac3EAfgACv/ILeoPcVvpzcQB+AAI/2GE83Bf9/nNxAH4AAj/uMxpbBY3Oc3EAfgACP/OtbvhBGsZzcQB+AAJABGVJn+JoN3NxAH4AAr/m+wGYr2Ioc3EAfgACv/alcXTNTCxzcQB+AAI/8dB7hWuW7nNxAH4AAj/n/ZsWPvdQc3EAfgACP8/MGtRGAstzcQB+AAI/8/5B0VRyAnNxAH4AAr/yy+euogu4c3EAfgACv+ewV2qPQ2JzcQB+AALAEugbIVEYg3NxAH4AAj/TW6/K/RQNc3EAfgACv+0R76H5BmpzcQB+AAK/3hyy6VqgonNxAH4AAj/y6FIsGqOKc3EAfgACP/VbG1BcMI1zcQB+AAI/ufiRJjF4aHNxAH4AAkAD7r6HADZ4c3EAfgACv+Bms39GWK1zcQB+AAI/9D1DoZ997HNxAH4AAj/ZDGOJPA+8c3EAfgACP+kSeXmJIcZzcQB+AAK/14cPLkpHwnNxAH4AAj/TwGcYKf0Jc3EAfgACQALHEsNIvqtzcQB+AAJAASe5D17z7XNxAH4AAr/JGesIglvNc3EAfgACv9dfxR3qBINzcQB+AAK/1QrBWm8d9XNxAH4AAkABxnt1M+Vfc3EAfgACv+tkt0xhMi5zcQB+AAI/rW7dlQoJ+HNxAH4AAr//uG7kbLPBc3EAfgACP+mQvvFze1dzcQB+AAK/9DP8d3JU2nNxAH4AAj/IcJfyT42Wc3EAfgACwASQ7E/uD95zcQB+AAK/9hi+StHhuXNxAH4AAr/mJ/O7BJmnc3EAfgACv9wK+e4qLyVzcQB+AAK/4qezy+xLXHNxAH4AAr/vVX+lxjUdc3EAfgACQAwf/dqT0gFzcQB+AAK//VkTKhRAKXNxAH4AAsAARbzsmhZ8c3EAfgACv9MAua3FZflzcQB+AAI/svS8dUoKKHNxAH4AAr/Ts1J/Mkb0c3EAfgACP/SJTqjuVbRzcQB+AAI/8CEgpbEG9HNxAH4AAj/p4oPRMXs1c3EAfgACv+2tIwrW2WFzcQB+AAI/4UzCEtuCunNxAH4AAj/wCY/C5rkKc3EAfgACP/T0W4hcKGtzcQB+AAI/5gXi4jin/HNxAH4AAkAEvgtT9ev2c3EAfgACQALkyiMfPXVzcQB+AAK/80m3RX9UyHNxAH4AAj/TynDwkokIc3EAfgACP+LSvr2mWipzcQB+AALAABdPlAtQCnNxAH4AAj/yaYmP2XRgc3EAfgACv+B8/lHHqOZzcQB+AAI/1SozBwdJEHNxAH4AAr/r/z/OuX4ac3EAfgACv9wfftEJeXVzcQB+AALAAkmJDBgGZnNxAH4AAj/TaMxtOLcEc3EAfgACwAfMu5s+bd14"
  ]
)