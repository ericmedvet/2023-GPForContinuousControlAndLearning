ea.runOutcome(
  index = 230;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-006.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)