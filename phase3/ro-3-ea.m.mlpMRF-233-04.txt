ea.runOutcome(
  index = 233;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-006.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)