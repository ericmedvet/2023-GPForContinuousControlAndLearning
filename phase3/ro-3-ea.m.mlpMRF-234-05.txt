ea.runOutcome(
  index = 234;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-006.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 5);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)