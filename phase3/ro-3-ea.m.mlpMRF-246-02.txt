ea.runOutcome(
  index = 246;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-007.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 2);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)