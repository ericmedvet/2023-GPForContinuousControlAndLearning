ea.runOutcome(
  index = 247;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-007.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)