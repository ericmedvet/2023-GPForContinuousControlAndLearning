ea.runOutcome(
  index = 248;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-007.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)