ea.runOutcome(
  index = 263;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-008.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)