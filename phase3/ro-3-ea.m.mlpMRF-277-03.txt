ea.runOutcome(
  index = 277;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-009.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAADWdwQAAADWc3IAEGphdmEubGFuZy5Eb3VibGWAs8JKKWv7BAIAAUQABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwP/nSfIS3PQBzcQB+AAK/6qipQg6R6HNxAH4AAj/5vk2S+npfc3EAfgACv9OCi+3s4rJzcQB+AAI/235631o6QHNxAH4AAr/YS4SqxobAc3EAfgACv/KaeOG9GiBzcQB+AAI/8WOi0c95bnNxAH4AAj/cNM2tV3ESc3EAfgACv/rDft6C+cpzcQB+AAI/5T9UdrvkmnNxAH4AAj/p3FNNivBYc3EAfgACv/CAdXysMQRzcQB+AAI/pMDZEg/e0HNxAH4AAj/OJqN5Hjkac3EAfgACv934HbJUfnRzcQB+AAI/7u2Llvc+uXNxAH4AAr/i/oiJzqWgc3EAfgACwAcSGs6bOUhzcQB+AAK/3spdBaqlHnNxAH4AAr/nXSHdTokYc3EAfgACv/NHcpScZiRzcQB+AAI/zE2Bfi9xqnNxAH4AAj/SVeElN7TAc3EAfgACP+kKP4wmjNdzcQB+AAI/9zp8IENU8HNxAH4AAj/Lv19Ddjygc3EAfgACP6rPlyHQqaJzcQB+AAK/8I+b7EixQHNxAH4AAr/6IEFoMNvpc3EAfgACv+3cf/mOerxzcQB+AAI/2lqMvy2EiHNxAH4AAr/xw1YJurgoc3EAfgACP+CyOfhgi4JzcQB+AAK/9YcqPDro2nNxAH4AAj/vW9Intvsqc3EAfgACv/G7AnINFaxzcQB+AAI/0qZga5+aKnNxAH4AAr/gu9lTzTsXc3EAfgACP7jEsEwIbwBzcQB+AAI/4ubNk7+sJnNxAH4AAr/12FeWCq/Bc3EAfgACP/PJyjFQMtNzcQB+AAI/3iKlS3O4Y3NxAH4AAj/2NZtNagGec3EAfgACP97QDGeyphpzcQB+AAI/9hqGn0Zw5HNxAH4AAj/+o8Ds7HQic3EAfgACv+3wTB5t045zcQB+AALAAMPr1xT7pnNxAH4AAr/Ta8N/vnQyc3EAfgACv9j6itdaqhJzcQB+AAK/XH8bKkmDQHNxAH4AAj/X/LEnGSXPc3EAfgACv91OO7kFg11zcQB+AAK/8bJH1+FP2HNxAH4AAj/jYysN0MV+c3EAfgACv/oOdZ9nXSFzcQB+AAI/1kWoC/RSp3NxAH4AAr/Vgggbd8mac3EAfgACP+R71/y90mlzcQB+AAK/71OAXDl+dnNxAH4AAkAATRkfeEh3c3EAfgACv/AibUK5N4pzcQB+AAI/6vK6HSFfIHNxAH4AAr/5FdUJZfQrc3EAfgACv7xScA0e9ihzcQB+AAK/4A1+h7g0VHNxAH4AAr/KnplW6R2Bc3EAfgACwACU3adnE1NzcQB+AAI/1fdaJqpevXNxAH4AAr/9nlUX12o7c3EAfgACv6e99oytro5zcQB+AAK/6aiTwEmCQXNxAH4AAj/dOG2CVFujc3EAfgACv8L2AqojtzhzcQB+AAI/0ZXdYZIIinNxAH4AAr/pvHzVh1Gwc3EAfgACP8LriMWg/yRzcQB+AAI/qNjaxpZuOHNxAH4AAj/id9K8G1wYc3EAfgACP/fovIQnyfdzcQB+AAK/3rGMpMX2+nNxAH4AAj/sNod81sMGc3EAfgACP+7Jl6pmulRzcQB+AAI/4hPIKqyZz3NxAH4AAr+nroDw1JXAc3EAfgACv+LEFQ88tRpzcQB+AAI/4lBE5MqsenNxAH4AAj++AdGjUW4nc3EAfgACP9J/x1bizKVzcQB+AAI/8q41lBusJ3NxAH4AAj/049YbjGPmc3EAfgACP9NnXL/F8CxzcQB+AAJAAAuGQTFImHNxAH4AAr/mPEDzpL3Sc3EAfgACP/IheZWHII1zcQB+AAK/+b4JBf9M3nNxAH4AAr/2pKfW1zdtc3EAfgACP7+mfgag8SZzcQB+AAK/0E27XLh6PHNxAH4AAr/9vQZU21S2c3EAfgACv/yxYeUbTTBzcQB+AAK/0c3jQyqgqHNxAH4AAkAEg/gLhaX1c3EAfgACQANhFAzdZx1zcQB+AAK/+9+fDB/CxHNxAH4AAr/phsW9NdBCc3EAfgACP+oRjg1DyydzcQB+AAK/6JByeawiJHNxAH4AAr/vwAHDr/mEc3EAfgACv8V0L3iIhhNzcQB+AAI/3LeyqXi4W3NxAH4AAj/CkpZjEE/0c3EAfgACv+hlR0GlxDlzcQB+AAK/83Hpm8htYnNxAH4AAj/6kG0cyN7ec3EAfgACv+oYS4MVhMVzcQB+AAI/lriYil5dcHNxAH4AAj/w8kwYxEd7c3EAfgACQAOY/FAi3y5zcQB+AAK/1PiujhjlB3NxAH4AAr/xp9+rYWWUc3EAfgACP7E06Ff4CFxzcQB+AAI/+rITuKvFm3NxAH4AAj/h/PxnHXbbc3EAfgACP7pxPhqRP75zcQB+AAK/3sQUpOX7o3NxAH4AAj/vxD90O+bfc3EAfgACP+aQw8AP8BhzcQB+AALABLYJJHcJQHNxAH4AAj/tPeQ82YQgc3EAfgACv+0mTbE7pBJzcQB+AAI/1LzQ6cTJ43NxAH4AAr/jm+NvBWNYc3EAfgACv8YZygEnm6lzcQB+AALABQ3xls1CH3NxAH4AAj/ejWUzV+0Pc3EAfgACv/I6+4s/1jtzcQB+AALADC6alR5wA3NxAH4AAj/0dXP8/hCec3EAfgACP9ZWidqk8/BzcQB+AAK/5ya4I+DeKnNxAH4AAr/uxUuXsBrlc3EAfgACv/Tc3eooa4pzcQB+AAI/xo3LC/ttpHNxAH4AAr/hZMhUMqrHc3EAfgACv8BMN/jgHHtzcQB+AAK/9j+O2nSW0HNxAH4AAr/e0ac8i0RYc3EAfgACv+SvT57PvoZzcQB+AALAB4cmrhuWcnNxAH4AAr/HUz5ydqMwc3EAfgACv+OorG3VFNFzcQB+AAK/+stDOZXMV3NxAH4AAj/3RhKdUPCVc3EAfgACP+IGynPJshlzcQB+AAK/93KKMzSdVHNxAH4AAr/jpvlb9abyc3EAfgACv9qsLufDEDNzcQB+AAI/4rbEehTTUXNxAH4AAr/UJZ1lsBCuc3EAfgACP+mXhWi/bLVzcQB+AAI/7/SMXIUjqHNxAH4AAj/9OwiDBp+Oc3EAfgACP/FCJ7qk0LZzcQB+AAI/1XIXU8nyD3NxAH4AAj/6fl3kr1jdc3EAfgACv/SDAxElvOZzcQB+AAK/1s5eyrpP0HNxAH4AAsAF/7zqncLHc3EAfgACQAcS081/HWVzcQB+AALAAlWst6xsnnNxAH4AAr/XESZhjs97c3EAfgACv+OmYjIgctVzcQB+AAK/5i0p2YtPunNxAH4AAsADNhdFM8uQc3EAfgACv/e1drK1MANzcQB+AAI/27PQy1akqHNxAH4AAj/xdD1xD6hcc3EAfgACv/9MfOvd/TBzcQB+AAI/83lCuoerJ3NxAH4AAr/00Nvg/e4Wc3EAfgACP+ZyqMdDD/hzcQB+AAI/7rI7fMSICnNxAH4AAj/gVgmZQZeQc3EAfgACv9Go66obDTBzcQB+AAJAAsIeBUY4gnNxAH4AAr/UvSPPCAU/c3EAfgACv98pSaSTrQlzcQB+AAI/6E9CnXrQKXNxAH4AAj/FCGmAmfYrc3EAfgACv8uRmU3K1U5zcQB+AAI/sYigRdqHtHNxAH4AAj/g5H/qp+V/c3EAfgACv/aVZNfUfH5zcQB+AAK/4F28SMocSHNxAH4AAr+iDICTGVeQc3EAfgACP/nbIfNhKgBzcQB+AAK/+JDOKd3fInNxAH4AAj/jB3lXqgcBc3EAfgACv+N9COqyHjVzcQB+AAI/5mp3ukgG5HNxAH4AAr/h5fPWaKR3c3EAfgACP/AscFjLGWlzcQB+AAK//Z7O/Lj1KXNxAH4AAr/kf7eR6qQ2c3EAfgACv+8oqgLPlyJzcQB+AAK/zQFbT19v6nNxAH4AAj/asKrhJWl+c3EAfgACv/hbFqYgrgxzcQB+AAK/97iJAnNsYHNxAH4AAr/gm5ovTcSGc3EAfgACv+oEWut/FiR4"
  ]
)