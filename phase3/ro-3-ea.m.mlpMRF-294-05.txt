ea.runOutcome(
  index = 294;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-gp-3-010.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 5);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)