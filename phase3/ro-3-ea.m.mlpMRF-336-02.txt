ea.runOutcome(
  index = 336;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 2);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)