ea.runOutcome(
  index = 337;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-003.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)