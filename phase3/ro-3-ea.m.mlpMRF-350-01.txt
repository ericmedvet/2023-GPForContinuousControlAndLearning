ea.runOutcome(
  index = 350;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-004.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)