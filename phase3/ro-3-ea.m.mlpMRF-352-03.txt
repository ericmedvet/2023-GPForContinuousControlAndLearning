ea.runOutcome(
  index = 352;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-004.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)