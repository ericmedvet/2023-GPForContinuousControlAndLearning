ea.runOutcome(
  index = 368;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-005.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)