ea.runOutcome(
  index = 382;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-006.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)