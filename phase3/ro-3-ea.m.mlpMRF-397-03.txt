ea.runOutcome(
  index = 397;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-007.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)