ea.runOutcome(
  index = 398;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-007.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)