ea.runOutcome(
  index = 410;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-008.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)