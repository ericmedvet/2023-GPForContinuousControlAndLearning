ea.runOutcome(
  index = 413;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-008.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)