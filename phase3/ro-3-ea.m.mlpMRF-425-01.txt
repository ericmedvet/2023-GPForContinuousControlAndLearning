ea.runOutcome(
  index = 425;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-009.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 1);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)