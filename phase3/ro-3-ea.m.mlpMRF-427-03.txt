ea.runOutcome(
  index = 427;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ographea-3-009.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.numGA(
      crossoverP = 0.8;
      initialMaxV = 1;
      initialMinV = -1;
      mapper = ea.m.mlpMRF(
        dataset = ea.d.num.empty(
          xVars = [
            x0;
            x1;
            x2;
            x3;
            x4;
            x5;
            x6;
            x7;
            x8;
            x9;
            x10;
            x11;
            x12;
            x13;
            x14;
            x15
          ];
          yVars = [y0; y1; y2; y3]
        );
        innerLayerRatio = 0.65;
        nOfInnerLayers = 1
      );
      minNTournament = 3;
      nEval = 10000;
      nPop = 100;
      sigmaMut = 0.35;
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "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"
  ]
)