ea.runOutcome(
  index = 27;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-1-002.txt";
        folds = [0];
        nFolds = 40;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 3);
    solver = ea.s.oGraphea(
      arcAdditionRate = 3;
      arcRemovalRate = 0.1;
      mapper = ea.m.oGraphMRF(
        dataset = ea.d.num.empty(
          xVars = [x1; x2; x3; x4; x5; x6; x7];
          yVars = [y0; y1]
        );
        postOperator = tanh
      );
      maxConst = 5;
      minConst = 0;
      nConst = 10;
      nEval = 10000;
      nPop = 100;
      nodeAdditionRate = 1;
      operators = [
        addition;
        subtraction;
        multiplication;
        prot_division;
        prot_log
      ];
      rankBase = 0.75
    )
  );
  serializedGenotypes = [
    "rO0ABXNyAENpby5naXRodWIuZXJpY21lZHZldC5qZ2VhLmNvcmUucmVwcmVzZW50YXRpb24uZ3JhcGguTGlua2VkSGFzaEdyYXBo8kE6+k8gs3gCAAJMAARhcmNzdAAPTGphdmEvdXRpbC9NYXA7TAAFbm9kZXN0AA9MamF2YS91dGlsL1NldDt4cHNyABdqYXZhLnV0aWwuTGlua2VkSGFzaE1hcDTATlwQbMD7AgABWgALYWNjZXNzT3JkZXJ4cgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAwdwgAAABAAAAAKXNyAD1pby5naXRodWIuZXJpY21lZHZldC5qZ2VhLmNvcmUucmVwcmVzZW50YXRpb24uZ3JhcGguR3JhcGgkQXJjdMoFPXw1b5ECAAJMAAZzb3VyY2V0ABJMamF2YS9sYW5nL09iamVjdDtMAAZ0YXJnZXRxAH4ACHhwc3IAVmlvLmdpdGh1Yi5lcmljbWVkdmV0LmpnZWEuY29yZS5yZXByZXNlbnRhdGlvbi5ncmFwaC5udW1lcmljLm9wZXJhdG9yZ3JhcGguT3BlcmF0b3JOb2Rl9BLOPf4p+ywCAAFMAAhvcGVyYXRvcnQAWExpby9naXRodWIvZXJpY21lZHZldC9qZ2VhL2NvcmUvcmVwcmVzZW50YXRpb24vZ3JhcGgvbnVtZXJpYy9vcGVyYXRvcmdyYXBoL0Jhc2VPcGVyYXRvcjt4cgA4aW8uZ2l0aHViLmVyaWNtZWR2ZXQuamdlYS5jb3JlLnJlcHJlc2VudGF0aW9uLmdyYXBoLk5vZGWuiBEpK4RnmwIAAUkABWluZGV4eHAAAABhfnIAVmlvLmdpdGh1Yi5lcmljbWVkdmV0LmpnZWEuY29yZS5yZXByZXNlbnRhdGlvbi5ncmFwaC5udW1lcmljLm9wZXJhdG9yZ3JhcGguQmFzZU9wZXJhdG9yAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQURESVRJT05zcgBCaW8uZ2l0aHViLmVyaWNtZWR2ZXQuamdlYS5jb3JlLnJlcHJlc2VudGF0aW9uLmdyYXBoLm51bWVyaWMuT3V0cHV0q2IuuNm/R3IC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"
  ]
)