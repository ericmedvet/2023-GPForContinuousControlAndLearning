ea.runOutcome(
  index = 93;
  run = ea.run(
    problem = ea.p.mr.fromData(
      trainingDataset = ea.dataset.numerical.fromFile(
        filePath = "../phase2/data-ro-ga-1-007.txt";
        folds = [0];
        nFolds = 50;
        xVarNamePattern = "x.*";
        yVarNamePattern = "y.*"
      )
    );
    randomGenerator = ea.rg.defaultRG(seed = 4);
    solver = ea.s.multiSRTreeGP(
      crossoverP = 0.8;
      diversity = true;
      mapper = ea.m.treeMRF(
        dataset = ea.d.num.empty(
          xVars = [x1; x2; x3; x4; x5; x6; x7; x8];
          yVars = [y1; y2]
        );
        postOperator = tanh
      );
      maxConst = 5;
      maxTreeH = 8;
      minConst = 0;
      minNTournament = 3;
      minTreeH = 3;
      nAttemptsDiversity = 100;
      nConst = 10;
      nEval = 10000;
      nPop = 100;
      operators = [
        addition;
        subtraction;
        multiplication;
        prot_division;
        prot_log
      ];
      tournamentRate = 0.05
    )
  );
  serializedGenotypes = [
    "rO0ABXNyABFqYXZhLnV0aWwuQ29sbFNlcleOq7Y6G6gRAwABSQADdGFneHAAAAAEdwQAAAACc3IAN2lvLmdpdGh1Yi5lcmljbWVkdmV0LmpnZWEuY29yZS5yZXByZXNlbnRhdGlvbi50cmVlLlRyZWUKs7/qnQrEZQIAA0wACGNoaWxkcmVudAAQTGphdmEvdXRpbC9MaXN0O0wAB2NvbnRlbnR0ABJMamF2YS9sYW5nL09iamVjdDtMAAZwYXJlbnR0ADlMaW8vZ2l0aHViL2VyaWNtZWR2ZXQvamdlYS9jb3JlL3JlcHJlc2VudGF0aW9uL3RyZWUvVHJlZTt4cHNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAJ3BAAAAAJzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHNyAEtpby5naXRodWIuZXJpY21lZHZldC5qZ2VhLmNvcmUucmVwcmVzZW50YXRpb24udHJlZS5udW1lcmljLkVsZW1lbnQkVmFyaWFibGUAAAAAAAAAAAIAAUwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHQAAng1cQB+AAtzcQB+AAJzcQB+AAcAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAHcEAAAAAHhzcgBLaW8uZ2l0aHViLmVyaWNtZWR2ZXQuamdlYS5jb3JlLnJlcHJlc2VudGF0aW9uLnRyZWUubnVtZXJpYy5FbGVtZW50JENvbnN0YW50AAAAAAAAAAACAAFEAAV2YWx1ZXhwQBAAAAAAAABxAH4AE3NxAH4AAnNxAH4ABwAAAAJ3BAAAAAJzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHNxAH4AFz/gAAAAAAAAcQB+ABlzcQB+AAJzcQB+AAcAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAHcEAAAAAHhzcQB+AA90AAJ4MXEAfgAec3EAfgACc3EAfgAHAAAAAHcEAAAAAHhxAH4AGHEAfgAeeH5yAEtpby5naXRodWIuZXJpY21lZHZldC5qZ2VhLmNvcmUucmVwcmVzZW50YXRpb24udHJlZS5udW1lcmljLkVsZW1lbnQkT3BlcmF0b3IAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhQUk9UX0xPR3EAfgAZeH5xAH4AJnQACEFERElUSU9OcQB+ABN4fnEAfgAmdAANUFJPVF9ESVZJU0lPTnEAfgALeHEAfgAocQB+AAlzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHNxAH4AD3QAAng0cQB+AAl4fnEAfgAmdAAOTVVMVElQTElDQVRJT05xAH4ABnNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4cQB+ABFxAH4ABnh+cQB+ACZ0AAtTVUJUUkFDVElPTnBzcQB+AAJzcQB+AAcAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAJ3BAAAAAJzcQB+AAJzcQB+AAcAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAJ3BAAAAAJzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHEAfgAdcQB+AEJzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHEAfgARcQB+AEJ4cQB+ADZxAH4AQHNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4c3EAfgAPdAACeDNxAH4AQHhxAH4AKnEAfgA+c3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4cQB+ABhxAH4ATHNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4cQB+ABFxAH4ATHhxAH4AKHEAfgA+eHEAfgAscQB+ADxzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHEAfgAicQB+ADx4cQB+ACpxAH4AOnNxAH4AAnNxAH4ABwAAAAJ3BAAAAAJzcQB+AAJzcQB+AAcAAAAAdwQAAAAAeHEAfgAYcQB+AFRzcQB+AAJzcQB+AAcAAAACdwQAAAACc3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4c3EAfgAXP/AAAAAAAABxAH4AWnNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4cQB+ABFxAH4AWnhxAH4ANnEAfgBYc3EAfgACc3EAfgAHAAAAAncEAAAAAnNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4c3EAfgAPdAACeDJxAH4AYXNxAH4AAnNxAH4ABwAAAAB3BAAAAAB4cQB+ABhxAH4AYXhxAH4AKnEAfgBYeHEAfgA2cQB+AFR4cQB+AChxAH4AOnhxAH4ALHEAfgA4c3EAfgACc3EAfgAHAAAAAHcEAAAAAHhxAH4AInEAfgA4eHEAfgAqcHg="
  ]
)